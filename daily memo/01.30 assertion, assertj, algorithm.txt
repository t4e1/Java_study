assertj / algorithm / 정렬



시간 복잡도 : 1초 =  1억 바퀴 라고 생각하고 접근 / 10000개의 데이터가 주어지는데 2중for문을 사용해야 한다 -> 10000x10000 이니까 1초 초과 -> 다른 방법을 생각해봐야한다. 

입력값의 증가에 따른 시간 증가도

Big-O 표기법 : 1~10000개의 데이터를 넣을 때, 최악의 상황(한번에 10000개)을 가정해서 분석하는 방법


O(1) : 0번째 데이터를 뽑는거는 입력시간과 상관없이 1


공간 복잡도 : [주어진 용량/4 * 100000] byte 정도의 배열을 사용할 수 있겠구나 생각하고 접근


정렬

기본적으로 라이브러리에서 제공하는 sorting 기법은 nlogn 의 시간 복잡도를 가진다 
( ex Arrays.sort() 등) n^2 보다는 훨씬 나으니까 시간 부족하면 이중 for문 같은거 쓰지말고 
라이브러리 제공 sort사용할것  

버블 정렬 


